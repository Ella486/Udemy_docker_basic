- 도커와 컨테이너 없이 로컬에서 이 파일을 실행하려면 최신 버전의 NodeJS가 되어 있어야한다. (v14.3 이상)
- npm install
- node app.mjs
- 그 후 브라우저 창에 localhost:3000 을 치고 들어가면 'Hi there!' 이라는 글자가 보인다.

but!
이건 docker를 사용하기위한 데모 파일이므로 위에 방법 말고 docer를 이용해서 창을 켜보겠다.
이 코드를 컨테이너에서 실행하려고 한다. 
컨테이너는 항상 이미지를 기반으로 하기 때문에 이를 위해 먼저 이미지라 불리는 것을 생성해야한다.
이러한 이미지를 생성하기 위해 도커 파일을 생성하는데 확장자 없이 단순히 Dockerfile이라 명명한다.
Dockerfile 안에 컨테이너를 설정하는 방법을 기입한다. (안에 무엇을 의미하는지 기입해놨다.)

- 현재 있는 도커 설정으로 실행 (이 때, docker desktop이 켜져 있는지 확인해야한다. - 고래가 켜져있는지 확인!!)
- docker build . 
- image id가 생성되면 
- docker run <image ID 이름>
- but, 여기에 있는 컨테이너에는 통신하려는 포트가 있으므로 실제로 실행하려는 컨테이너에 해당 포트를 게시해야한다.
- docker run -p 3000:3000 <image id 이름>
- 로컬 시스템의 로컬 호스트를 사용하여 컨테이너 대신 포트 3000에서 실행되는 애플리케이션에 연결할 수 있다.
- 컨테이너와 호스트 운영 체제 사이에는 디폴트 연결이 없기 때문이다.

docker를 중지시키기 위해서는 docker가 현재 실행하고 있는 terminal 창에서는 중지시킬수는 없다.
새로운 terminal 창을 열어서
- docker ps
- 현재 실행되고 있는 컨테이너들의 리스트가 뜬다. 리스트 중에서 원하는 이름을 선택해서 
- docker stop <컨테이너 name>
- 그러면 docker가 중지 되었음을 볼 수 있다.

